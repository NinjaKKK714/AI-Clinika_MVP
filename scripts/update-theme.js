const fs = require('fs');
const path = require('path');

// –°–ø–∏—Å–æ–∫ —ç–∫—Ä–∞–Ω–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
const screens = [
  'AnalysesScreen.js',
  'AnalysisDetailScreen.js',
  'ClinicDetailScreen.js',
  'HistoryScreen.js',
  'ProfileScreen.js',
  'RequestDetailScreen.js',
  'RequestsScreen.js',
  'SpecialistDetailScreen.js',
  'SplashScreen.js'
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–∞
function updateScreen(screenName) {
  const filePath = path.join(__dirname, '..', 'screens', screenName);
  
  if (!fs.existsSync(filePath)) {
    console.log(`–§–∞–π–ª ${screenName} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    return;
  }

  let content = fs.readFileSync(filePath, 'utf8');
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç —Ç–µ–º—ã, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
  if (!content.includes("import { useTheme } from '../themes/useTheme';")) {
    const importMatch = content.match(/import.*from.*react-native.*;\n/);
    if (importMatch) {
      const insertIndex = importMatch.index + importMatch[0].length;
      content = content.slice(0, insertIndex) + 
                "import { useTheme } from '../themes/useTheme';\n" + 
                content.slice(insertIndex);
    }
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–µ–º—ã –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
  if (!content.includes('const { colors, isDarkMode } = useTheme();')) {
    const componentMatch = content.match(/export default function \w+\([^)]*\) \{\s*\n/);
    if (componentMatch) {
      const insertIndex = componentMatch.index + componentMatch[0].length;
      content = content.slice(0, insertIndex) + 
                '  const { colors, isDarkMode } = useTheme();\n' + 
                content.slice(insertIndex);
    }
  }

  // –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π StyleSheet.create –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é
  if (content.includes('const styles = StyleSheet.create({')) {
    content = content.replace(
      'const styles = StyleSheet.create({',
      'const createStyles = (colors) => StyleSheet.create({'
    );
  }

  // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∏–ª–µ–π –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
  if (!content.includes('const styles = createStyles(colors);')) {
    const returnMatch = content.match(/return \(\s*\n/);
    if (returnMatch) {
      const insertIndex = returnMatch.index;
      content = content.slice(0, insertIndex) + 
                '  const styles = createStyles(colors);\n\n' + 
                content.slice(insertIndex);
    }
  }

  // –ó–∞–º–µ–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞
  const colorReplacements = [
    { from: "color: '#333333',", to: 'color: colors.textPrimary,' },
    { from: "color: '#666666',", to: 'color: colors.textSecondary,' },
    { from: "color: '#0863a7',", to: 'color: colors.primary,' },
    { from: "backgroundColor: '#ffffff',", to: 'backgroundColor: colors.background,' },
    { from: "backgroundColor: '#f8f9fa',", to: 'backgroundColor: colors.backgroundSecondary,' },
    { from: "borderColor: '#e0e0e0',", to: 'borderColor: colors.border,' },
    { from: "borderColor: '#e9ecef',", to: 'borderColor: colors.border,' }
  ];

  colorReplacements.forEach(({ from, to }) => {
    content = content.replace(new RegExp(from.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'), 'g'), to);
  });

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
  fs.writeFileSync(filePath, content);
  console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω ${screenName}`);
}

// –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —ç–∫—Ä–∞–Ω—ã
console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–æ–≤ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã...\n');

screens.forEach(updateScreen);

console.log('\n‚ú® –í—Å–µ —ç–∫—Ä–∞–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
console.log('\nüìù –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:');
console.log('- –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç useTheme');
console.log('- –î–æ–±–∞–≤–ª–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–µ–º—ã –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö');
console.log('- –û–±–Ω–æ–≤–ª–µ–Ω—ã —Å—Ç–∏–ª–∏ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —Ü–≤–µ—Ç–æ–≤');
console.log('- –ó–∞–º–µ–Ω–µ–Ω—ã –æ—Å–Ω–æ–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞ –Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ–º—ã');
console.log('\nüé® –¢–µ–ø–µ—Ä—å –≤—Å–µ —ç–∫—Ä–∞–Ω—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç —Ç–µ–º–Ω—É—é —Ç–µ–º—É!');




